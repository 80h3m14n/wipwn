name: üöÄ Full Deploy & Telegram Notify for WIPWN

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  issues:
    types: [opened]
  issue_comment:
    types: [created]
  watch:
    types: [started]
  fork:
    types: [created]
  pull_request:
    types: [opened, reopened, closed, merged]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TZ: Asia/Dhaka

jobs:
  deploy:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: üì¶ Upload Static Files
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'

      - name: üöÄ Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Get Repo Info
        id: repo_info
        run: |
          repo=${GITHUB_REPOSITORY}
          info=$(curl -s https://api.github.com/repos/$repo)
          echo "STARS=$(echo \"$info\" | jq -r .stargazers_count)" >> $GITHUB_OUTPUT
          echo "FORKS=$(echo \"$info\" | jq -r .forks_count)" >> $GITHUB_OUTPUT

      - name: üì¨ Telegram Notification ‚Äì Deployment
        run: |
          NOW=$(date '+%Y-%m-%d %H:%M:%S')
          TEXT="‚û† Deployment Completed
‚û† Name: ${{ github.actor }}
‚û† Repository: [${{ github.repository }}](https://github.com/${{ github.repository }})
‚û† Stars: ${{ steps.repo_info.outputs.STARS }} | Forks: ${{ steps.repo_info.outputs.FORKS }}
‚û† Time: $NOW (Asia/Dhaka)

[üîó View Documentation](${{ steps.deployment.outputs.page_url }})"
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d parse_mode="Markdown" \
            -d disable_web_page_preview=true \
            -d text="$TEXT"

  notify_issue:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: üêû Telegram Notification ‚Äì New Issue
        run: |
          NOW=$(date '+%Y-%m-%d %H:%M:%S')
          TEXT="‚û† New Issue Created
‚û† Name: ${{ github.actor }}
‚û† Repository: [${{ github.repository }}](https://github.com/${{ github.repository }})
‚û† Title: _${{ github.event.issue.title }}_
‚û† Time: $NOW (Asia/Dhaka)

[üîó View Issue](${{ github.event.issue.html_url }})"
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d parse_mode="Markdown" \
            -d disable_web_page_preview=true \
            -d text="$TEXT"

  notify_issue_comment:
    if: github.event_name == 'issue_comment'
    runs-on: ubuntu-latest
    steps:
      - name: üí¨ Telegram Notification ‚Äì New Issue Comment
        run: |
          NOW=$(date '+%Y-%m-%d %H:%M:%S')
          ISSUE_TITLE="${{ github.event.issue.title }}"
          COMMENT_BODY=$(echo "${{ github.event.comment.body }}" | head -c 200)
          TEXT="‚û† New Comment on Issue
‚û† Name: ${{ github.actor }}
‚û† Repository: [${{ github.repository }}](https://github.com/${{ github.repository }})
‚û† Issue: _${ISSUE_TITLE}_
‚û† Comment: _${COMMENT_BODY}..._
‚û† Time: $NOW (Asia/Dhaka)

[üîó View Comment](${{ github.event.comment.html_url }})"
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d parse_mode="Markdown" \
            -d disable_web_page_preview=true \
            -d text="$TEXT"

  notify_star:
    if: github.event_name == 'watch'
    runs-on: ubuntu-latest
    steps:
      - name: ‚≠ê Telegram Notification ‚Äì New Star
        run: |
          NOW=$(date '+%Y-%m-%d %H:%M:%S')
          TEXT="‚û† New Star!
‚û† Name: ${{ github.actor }}
‚û† Repository: [${{ github.repository }}](https://github.com/${{ github.repository }})
‚û† Time: $NOW (Asia/Dhaka)

‚≠ê Thank you!"
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d parse_mode="Markdown" \
            -d disable_web_page_preview=true \
            -d text="$TEXT"

  notify_fork:
    if: github.event_name == 'fork'
    runs-on: ubuntu-latest
    steps:
      - name: üç¥ Telegram Notification ‚Äì New Fork
        run: |
          NOW=$(date '+%Y-%m-%d %H:%M:%S')
          TEXT="‚û† New Fork!
‚û† Name: ${{ github.actor }}
‚û† Repository: [${{ github.repository }}](https://github.com/${{ github.repository }})
‚û† Time: $NOW (Asia/Dhaka)

üç¥ Happy forking!"
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d parse_mode="Markdown" \
            -d disable_web_page_preview=true \
            -d text="$TEXT"

  notify_pull_request:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: üîÄ Telegram Notification ‚Äì Pull Request
        run: |
          NOW=$(date '+%Y-%m-%d %H:%M:%S')
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          ACTION="${{ github.event.action }}"
          MERGED="${{ github.event.pull_request.merged }}"
          MSG=""
          if [ "$ACTION" = "opened" ] || [ "$ACTION" = "reopened" ]; then
            MSG="‚û† Pull Request $ACTION
‚û† Name: ${{ github.actor }}
‚û† Repository: [${{ github.repository }}](https://github.com/${{ github.repository }})
‚û† Title: _${PR_TITLE}_
‚û† Time: $NOW (Asia/Dhaka)

[üîó View PR](${PR_URL})"
          elif [ "$ACTION" = "closed" ] && [ "$MERGED" = "true" ]; then
            MSG="‚û† Pull Request Merged
‚û† Name: ${{ github.actor }}
‚û† Repository: [${{ github.repository }}](https://github.com/${{ github.repository }})
‚û† Title: _${PR_TITLE}_
‚û† Time: $NOW (Asia/Dhaka)

[üîó View PR](${PR_URL})"
          elif [ "$ACTION" = "closed" ] && [ "$MERGED" = "false" ]; then
            MSG="‚û† Pull Request Closed
‚û† Name: ${{ github.actor }}
‚û† Repository: [${{ github.repository }}](https://github.com/${{ github.repository }})
‚û† Title: _${PR_TITLE}_
‚û† Time: $NOW (Asia/Dhaka)

[üîó View PR](${PR_URL})"
          fi
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d parse_mode="Markdown" \
            -d disable_web_page_preview=true \
            -d text="$MSG"
